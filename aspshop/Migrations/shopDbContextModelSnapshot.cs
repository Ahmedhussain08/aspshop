// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aspshop.Models;

#nullable disable

namespace aspshop.Migrations
{
    [DbContext(typeof(shopDbContext))]
    partial class shopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("aspshop.Models.admin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("admin");
                });

            modelBuilder.Entity("aspshop.Models.brand", b =>
                {
                    b.Property<int>("brandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("brandID"), 1L, 1);

                    b.Property<string>("bname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("brandID");

                    b.ToTable("brands");
                });

            modelBuilder.Entity("aspshop.Models.category", b =>
                {
                    b.Property<int>("catID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("catID"), 1L, 1);

                    b.Property<string>("cname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("catID");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("aspshop.Models.product", b =>
                {
                    b.Property<int>("proID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("proID"), 1L, 1);

                    b.Property<string>("Imagepath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("brandID")
                        .HasColumnType("int");

                    b.Property<int>("catID")
                        .HasColumnType("int");

                    b.Property<int>("categorycatID")
                        .HasColumnType("int");

                    b.Property<string>("pdesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pprice")
                        .HasColumnType("int");

                    b.HasKey("proID");

                    b.HasIndex("brandID");

                    b.HasIndex("categorycatID");

                    b.ToTable("products");
                });

            modelBuilder.Entity("aspshop.Models.product", b =>
                {
                    b.HasOne("aspshop.Models.brand", "brand")
                        .WithMany("products")
                        .HasForeignKey("brandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("aspshop.Models.category", "category")
                        .WithMany("products")
                        .HasForeignKey("categorycatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("brand");

                    b.Navigation("category");
                });

            modelBuilder.Entity("aspshop.Models.brand", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("aspshop.Models.category", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
